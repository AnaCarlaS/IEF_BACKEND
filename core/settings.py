"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import environ

# from django.conf.urls.static import static

from .logger import structlog
LOGGER = structlog.stdlib.get_logger()
# LOGGER.info("Serviço CAR inicializado, com aplicações ETL e API.")
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

DATA_DIR = BASE_DIR / 'data'

env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)

env.read_env(BASE_DIR / '.env')

# SECRET_KEY = env('SECRET_KEY')
SECRET_KEY='PFwtwwKBp8KlfNpLYn+BtqPq0XHajlKNixUd0HZZxO1ic8iGrtGS+WPe6u7tNBS'

DEBUG = env('DEBUG')

FOLDER_CAR = env('FOLDER_CAR')
TEMA_CAR = env('TEMA_CAR')
DB_SCHEMA = env('DB_SCHEMA')
DEFAULT_SCHEDULE = env('DEFAULT_SCHEDULE')
GEOSERVER_SICAR_WFS_URL = env('GEOSERVER_SICAR_WFS_URL')

# ALLOWED_HOSTS = ['setelagoas.ufsj.edu.br', 'localhost', '127.0.0.1', '172.19.16.50',]
CSRF_TRUSTED_ORIGINS = ['https://setelagoas.ufsj.edu.br', 'https://172.19.16.50',
                        'http://setelagoas.ufsj.edu.br', 'http://172.19.16.50', 
                        'http://localhost:5173',
                        'https://florescer.inovação.dev.br', 'http://florescer.inovação.dev.br',
                        'https://florescer.xn--inovao-7ta5a.dev.br']
ALLOWED_HOSTS = ['*']
CORS_ALLOW_ALL_ORIGINS = True



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "wn7HGVP5IauZrZS8h4IxtekcK1Q2Q7nLQTPeOh0F03v9y/EA6IaNTKIUOFZk06Ls63RhbzydzACNDcjEMiS3ig"

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'django.contrib.gis',
    
    'corsheaders',
    'rest_framework',
    'rest_framework_gis',
    'drf_yasg',
    'ninja',
    
    'car_etl',
    'car_api',
    'projeto',
    
    
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",

    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = "core.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        'DIRS': [BASE_DIR / 'templates'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "core.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis', 
        'NAME': env('DB_NAME'),
        'USER': env('DB_USER'),
        'PASSWORD': env('DB_PASSWORD'),
        'HOST': env('DB_HOST'),
        'PORT': env('DB_PORT'),
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "pt-br" # "en-us"

TIME_ZONE = 'America/Sao_Paulo' # "UTC"

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/ief-suporte/static/' # "static/"
# STATICFILES_DIRS = [BASE_DIR / "static"]
STATIC_ROOT = BASE_DIR / "static"



# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

APSCHEDULER_DATETIME_FORMAT = "N j, Y, f:s a"

APSCHEDULER_RUN_NOW_TIMEOUT = 18.000 # s == 5 h 


REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    ),
}
